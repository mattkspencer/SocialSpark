# Fix Stuck Loading Screen After Sign Out

## Problem Description
After clicking "Sign Out", the app gets stuck on a loading screen and won't load the homepage. This is typically caused by:
1. Authentication verification failing but not properly handling the error
2. Infinite loading state due to authentication loop
3. Token removal not working correctly
4. Network request hanging during auth verification

## Immediate Fix Steps

### Step 1: Clear Browser Storage (Quick Fix)
First, try clearing the browser storage to reset the authentication state:

1. **Open Browser Developer Tools** (F12 or right-click → Inspect)
2. **Go to Application tab** → Storage section
3. **Clear Local Storage**:
   - Find "Local Storage" in the left sidebar
   - Click on your Replit app's domain
   - Delete any stored tokens or data (especially any 'token' entries)
4. **Clear Session Storage** (if present)
5. **Refresh the page**

### Step 2: Fix Authentication Hook
The issue is likely in the `useAuth` hook. Update it to handle errors properly:

```typescript
// In client/src/hooks/useAuth.ts - Add better error handling:
import { useState, useEffect } from 'react';

const useAuth = () => {
  const [user, setUser] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const checkAuth = async () => {
      setIsLoading(true);
      
      try {
        const token = localStorage.getItem('token');
        
        // If no token, user is not authenticated
        if (!token) {
          console.log('No token found, user not authenticated');
          setUser(null);
          setIsLoading(false);
          return;
        }

        console.log('Token found, verifying authentication...');
        
        // Set a timeout to prevent hanging requests
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout
        
        const response = await fetch('/api/auth/verify', {
          headers: { 
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          },
          signal: controller.signal
        });

        clearTimeout(timeoutId);

        if (response.ok) {
          const userData = await response.json();
          console.log('Authentication verified:', userData);
          setUser(userData);
        } else {
          console.log('Authentication verification failed:', response.status);
          // Clear invalid token
          localStorage.removeItem('token');
          setUser(null);
        }
      } catch (error) {
        console.error('Authentication check error:', error);
        // Clear potentially corrupted token
        localStorage.removeItem('token');
        setUser(null);
      } finally {
        setIsLoading(false);
      }
    };

    checkAuth();
  }, []);

  const signOut = () => {
    localStorage.removeItem('token');
    setUser(null);
    setIsLoading(false);
    // Force reload to reset app state
    window.location.href = '/';
  };

  return { user, isLoading, signOut };
};

export default useAuth;
```

### Step 3: Fix Sign Out Buttons
Update all sign out buttons to use the proper signOut function:

```typescript
// In client/src/components/Layout.tsx - Fix sign out button:
const Layout = ({ children }) => {
  const { user, signOut } = useAuth();
  
  return (
    <div className="min-h-screen bg-gray-50">
      <header className="sticky top-0 z-50 bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <Link to="/" className="text-xl font-bold text-gray-900 hover:text-blue-600 transition-colors">
                SocialAI
              </Link>
            </div>
            <div className="flex items-center space-x-4">
              <span className="text-sm text-gray-700">
                Welcome, {user?.first_name || user?.email}
              </span>
              <button
                onClick={signOut}  // Use the proper signOut function
                className="text-sm text-gray-500 hover:text-gray-700 transition-colors px-3 py-1 rounded-md hover:bg-gray-100"
              >
                Sign Out
              </button>
            </div>
          </div>
        </div>
      </header>
      
      <div className="flex">
        <Sidebar />
        <main className="flex-1 p-6">
          {children}
        </main>
      </div>
    </div>
  );
};
```

```typescript
// In client/src/pages/Landing.tsx - Fix sign out button:
const Landing = () => {
  const { user, signOut } = useAuth();
  
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <nav className="sticky top-0 z-50 bg-white/95 backdrop-blur-sm shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16 items-center">
            <div className="flex items-center">
              <Link to="/" className="text-2xl font-bold text-gray-900 hover:text-blue-600 transition-colors">
                SocialAI
              </Link>
            </div>
            <div className="flex items-center space